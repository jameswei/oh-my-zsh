#compdef app-status
typeset -A opt_args
local context state line ret curcontext="$curcontext"
_arguments -S "--fabric[Comma-separated Fabric names]:fabric:_fabrics" "--fabrics[Comma-separated Fabric names]:fabrics:_fabrics" "-f[Comma-separated Fabric names]:f:_fabrics" "--fabric-group[The comma-separated FabricGroup names]:fabric-group:" "-fg[The comma-separated FabricGroup names]:fg:" "--all[Display status for all applications on the fabric(s).]:all:" "--product[Product(s) to get status for.]:product:_product" "-p[Product(s) to get status for.]:p:_product" "--application[Application(s) to get status for.]:application:" "-a[Application(s) to get status for.]:a:" "--host[Host(s) to get status for.]:host:" "-H[Host(s) to get status for.]:H:" "--instance[Instance(s) to get status for.]:instance:" "-i[Instance(s) to get status for.]:i:" "--payload[Payload(s) to get status for.]:payload:" "--tag[Tags(s) to get status for.]:tag:" "-t[Tags(s) to get status for.]:t:" "--kind[Kind(s) to get status for (example: jetty, tomcat, generic).]:kind:" "--partial[Match names partially (default is exact match, use this if you want pal to match pal-tomcat).]:partial:" "--skip-check[Dont ping /admin healthcheck, just display deployment info.]:skip-check:" "-s[Dont ping /admin healthcheck, just display deployment info.]:s:" "--skip-proxy[Dont use proxy to do healthcheck]:skip-proxy:" "--use-intended[Check the intended topology as well]:use-intended:" "--with-v2[Used with --use-intended to always show Topology v2 apps (alongside v3 apps)]:with-v2:" "--skip-inert[Dont check inert applications (data packs, static content).]:skip-inert:" "--config[Show config version.]:config:" "--skeleton[Show skeleton versions instead of associated product/war versions.]:skeleton:" "--show-tags[Show untyped tags as well as ASP tags (which are always shown).]:show-tags:" "--show-updated[Show the last time this app instance was deployed (in UTC).]:show-updated:" "--show-header[Show a header indicating what each column is showing.]:show-header:" "--verbose[Verbose output, lots of info on each instance.]:verbose:" "--color[Use colored output.]:color:" "--legend[Show what backend representations mean.]:legend:" "--benchmark[Show how long each app-status section takes.]:benchmark:" "--sanity-check[Perform a sanity check on data received by app-status.]:sanity-check:" "--sort[Sort by comma-separated list of keys from higher to lower precedence]:sort:" "--log[Log file destination]:log:" "--debug[Enable debug logging]:debug:" ": : _message 'name = [NAME]'"
compdef _app-status app-status
